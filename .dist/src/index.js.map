{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\nimport * as sift from \"sift\";\nexport const JavascriptDate = Date;\nexport const JavascriptObject = Object;\n\nexport namespace js {\n    export class Class {\n        public static toDotNotation(obj: Object) {\n            let obj_ = obj as any;\n            //check if obj is object or not\n            if (!obj && typeof obj !== \"object\") return obj;\n            //if the obj terminal then return itself\n            let ret_: any = {};\n            for (let key in obj) {\n                if (!Class.isPrimitiveType(obj_[key])) {\n                    let r = Class.toDotNotation(obj_[key]);\n                    for (let k in r) {\n                        ret_[key + \".\" + k] = r[k];\n                    }\n                } else {\n                    ret_[key] = obj_[key];\n                }\n            }\n            return ret_;\n        }\n        public static clean(obj: Object): void {\n            delete (obj as any).__proto__;\n        }\n        public static extend(subInstance: any, parentInstance: any): any {\n            for (let prop in parentInstance) {\n                if (!subInstance[prop]) subInstance[prop] = parentInstance[prop];\n            }\n            return subInstance;\n        }\n        public static clone<T extends any>(obj: T, deep: boolean): T {\n            if (this.isPrimitiveType(obj)) return obj;\n            if (obj instanceof Array) {\n                let sub = [];\n                for (let item of obj) {\n                    sub.push(Class.clone(item, true));\n                }\n                return sub as any;\n            } else {\n                var sub: any = {};\n                for (var prop in obj) {\n                    sub[prop] = (deep && ('object' === typeof obj[prop])) ? Class.clone(obj[prop], true) : obj[prop];\n                }\n                return <T>sub;\n            }\n        }\n        public static merge(primaryInstance: any, secondaryInstance: any) {\n            for (var prop in secondaryInstance) {\n                if (!primaryInstance[prop]) primaryInstance[prop] = secondaryInstance[prop];\n            }\n            return primaryInstance;\n        }\n        public static patch(source: any, patch: any) {\n            let obj = Class.clone(source, true);\n            for (let key in patch) {\n                if (Class.isPrimitiveType(obj[key])) {\n                    obj[key] = patch[key];\n                } else {\n                    obj[key] = Class.patch(obj[key], patch[key]);\n                }\n            }\n            return obj;\n        }\n        public static classify(emptyInstance: any, valueObj: any) {\n            for (var prop in emptyInstance) {\n                if ((\"function\" !== typeof emptyInstance[prop]) && !emptyInstance[prop]) emptyInstance[prop] = valueObj[prop];\n            }\n            return emptyInstance;\n        }\n        public static valuefy(instance: any) {\n            var valueObj: any = {};\n            var propToValuefy: any = null;\n            for (var prop in instance) {\n                if (\"function\" !== typeof instance[prop]) {\n                    valueObj[prop] = instance[prop];\n                } else if (typeof instance[prop] === \"object\") {\n                    valueObj[prop] = Class.valuefy(instance[prop]);\n                } else if ((prop.substring(0, 3) === \"get\") && (propToValuefy = prop.substring(3, prop.length))) {\n                    valueObj[propToValuefy[0].toLowerCase() + propToValuefy.substring(1, propToValuefy.length)] = instance[prop]();\n                }\n            }\n            return valueObj;\n        }\n        public static isPrimitiveType(obj: any): boolean {\n            return typeof obj === \"string\" ||\n                typeof obj === \"number\" ||\n                typeof obj === \"boolean\" ||\n                obj === undefined ||\n                obj === null ||\n                typeof obj === \"symbol\";\n        }\n        public static instanceOf<T>(referenceObject: T, obj: any | T): obj is T {\n            if (obj === null || obj === undefined) return false;\n            if (Class.isPrimitiveType(referenceObject)) return typeof referenceObject === typeof obj;\n            for (var prop in referenceObject) {\n                if (obj[prop] === undefined)\n                    return false;\n            }\n            return true;\n        }\n        ///TODO must be upgraded\n        public static doesCover(obj1: any, obj2: any): boolean {\n            for (let key in obj2) {\n                if (obj2[key] === null || obj2[key] === undefined) continue;\n                if (obj1[key] === undefined || obj1[key] === null) return false;\n                if (Class.isPrimitiveType(obj2[key])) {\n                    if (obj1[key] !== obj2[key]) return false;\n                } else {\n                    if (!Class.doesCover(obj1[key], obj2[key])) return false;\n                }\n            }\n            return true;\n        }\n        public static doesMongoCover(obj: any, query: any): boolean {\n            let array = sift.default(query, [obj]);\n            return array instanceof Array && array.length > 0;\n        }\n    }\n}\nexport namespace injection {\n    export class StaticTools {\n        public static valueOfValueChooser(valueChooser: ValueChooser): string {\n            return valueChooser.values[valueChooser.index];\n        }\n    }\n    export class Configuration {\n        public values: ValueChooser[];\n        public objects: ObjectChooser[];\n    }\n    export class ValueChooser {\n        public className: string;\n        public values: string[];\n        public index: number = 0;\n    }\n    export class ObjectChooser {\n        public class: ValueChooser;\n        public initialProperties: Object;\n    }\n}\nexport namespace sys {\n    export namespace type {\n        export class Exception {\n            constructor(public message: string, public innerException?: Exception) { }\n        }\n        export class Map<K, V> {\n            private keys = new Array<K>();\n            private values = new Array<V>();\n            constructor(private compareKeys?: (key1: K, key2: K) => boolean) { }\n            public add(key: K, value: V): void {\n                if (!this.get(key)) {\n                    this.keys.push(key);\n                    this.values.push(value);\n                } else {\n                    throw \"KeyAlreadyExistException\";\n                }\n            }\n            public keyExists(key: K): boolean {\n                return this.indexOf(key) >= 0;\n            }\n            public set(key: K, value: V): void {\n                var index = this.indexOf(key);\n                if (index >= 0) {\n                    this.values[index] = value;\n                } else {\n                    this.keys.push(key);\n                    this.values.push(value);\n                }\n            }\n            public remove(key: K): void {\n                var index = this.indexOf(key);\n                if (index >= 0) {\n                    this.keys.slice(index, 1);\n                    this.values.slice(index, 1);\n                }\n\n            }\n            public indexOf(key: K): number {\n                let index = -1;\n                if (this.compareKeys) {\n                    this.keys.forEach((k: K) => {\n                        if (this.compareKeys(k, key)) {\n                            index = this.keys.indexOf(k);\n                        }\n                    });\n                } else {\n                    index = this.keys.indexOf(key);\n                }\n                return index;\n            }\n            public get(key: K): V {\n                return this.values[this.indexOf(key)];\n            }\n            public getKeys(): K[] {\n                return this.keys;\n            }\n            public getValues(): V[] {\n                return this.values;\n            }\n        }\n        export interface Callback<T> {\n            (t: T | Exception): void\n        }\n        export interface Classifiable {\n            className: string;\n        }\n        export interface Identifiable {\n            id: string;\n        }\n        export interface Named {\n            name: string;\n        }\n        export class Point2D {\n            className: string = \"sys.type.Point2D\";\n            constructor(public x: number, public y: number) { }\n        }\n        export class TimeSpan {\n            className: string = \"sys.type.TimeSpan\";\n            constructor(public days: number, public hours: number, public minutes: number, public seconds: number, public miliseconds: number) { }\n        }\n        export class Time implements Classifiable {\n            className: string = \"sys.type.Time\";\n            constructor(public date: Date, public clock: Clock) { }\n        }\n        export class Date implements Classifiable {\n            className: string = \"sys.type.Date\";\n            constructor(public year: number, public month: number, public day: number) { }\n        }\n        export class Clock implements Classifiable {\n            className: string = \"sys.type.Clock\";\n            constructor(public hour: number, public minute: number, public second: number) { }\n        }\n        export type Primitive = string | number | boolean | undefined | null | symbol;\n        export namespace reference {\n            export const Exception = new sys.type.Exception(\"Exception\", null);\n        }\n        export namespace StaticTools {\n            export class Point2D {\n                public static distance(point1: type.Point2D, point2: type.Point2D) {\n                    return Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n                }\n            }\n            export class Any {\n                public static equals(val1: any, val2: any, deep: boolean) {\n                    return (js.Class.isPrimitiveType(val1) && js.Class.isPrimitiveType(val2) && Primitive.equals(val1, val2)) ||\n                        (!js.Class.isPrimitiveType(val1) && !js.Class.isPrimitiveType(val2) && Object.equals(val1, val2, deep));\n                }\n            }\n            export class Primitive {\n                public static equals(val1: Primitive, val2: Primitive) {\n                    return val1 === val2;\n                }\n            }\n            export class Object {\n                public static equals(obj1: any, obj2: any, deep?: boolean) {\n                    if (!obj1 && !obj2) {\n                        return true;\n                    }\n                    if (!obj1 || !obj2) {\n                        return false;\n                    }\n                    let obj1keys = JavascriptObject.keys(obj1);\n                    let obj2keys = JavascriptObject.keys(obj2);\n                    if (!Array.equals(obj1keys, obj2keys)) return false;\n                    if (obj1keys.length == 0) return true;\n                    if (deep) {\n                        for (let key of obj1keys) {\n                            if (typeof obj1[key] == \"object\") {\n                                if (!Object.equals(obj1[key], obj2[key], deep)) return false;\n                            } else {\n                                if (obj1[key] != obj2[key]) return false;\n                            }\n                        }\n                    } else {\n                        for (let key of obj1keys) {\n                            if (obj1[key] != obj2[key]) return false;\n                        }\n                    }\n                    return true;\n                }\n            }\n            export class Exception {\n                public static isNotException<T>(t: T | Exception): t is T {\n                    return !js.Class.instanceOf(reference.Exception, t);\n                }\n            }\n            export class UUID {\n                public static generate(): string {\n                    function word() {\n                        return Math.floor((1 + Math.random()) * 0x10000)\n                            .toString(16)\n                            .substring(1);\n                    }\n                    return word() + word() + '-' + word() + '-' + word() + '-' +\n                        word() + '-' + word() + word() + word();\n                }\n            }\n            export class TimeSpan {\n                public static fromUnixTimestamp(timestamp: number): sys.type.TimeSpan {\n                    var days = Math.floor(timestamp / (1000 * 60 * 60 * 24));\n                    timestamp -= days * (1000 * 60 * 60 * 24);\n\n                    var hours = Math.floor(timestamp / (1000 * 60 * 60));\n                    timestamp -= hours * (1000 * 60 * 60);\n\n                    var minutes = Math.floor(timestamp / (1000 * 60));\n                    timestamp -= minutes * (1000 * 60);\n\n                    var seconds = Math.floor(timestamp / 1000);\n                    timestamp -= seconds * 1000;\n\n                    var miliseconds = timestamp;\n\n                    return new sys.type.TimeSpan(days, hours, minutes, seconds, miliseconds);\n                }\n                public static toUnixTimestamp(timespan: sys.type.TimeSpan): number {\n                    let fromdays = timespan.days * 60 * 60 * 24 * 1000;\n                    let fromhours = timespan.hours * 60 * 60 * 1000;\n                    let fromminutes = timespan.minutes * 60 * 1000;\n                    let fromseconds = timespan.seconds * 1000;\n                    let frommiliseconds = timespan.miliseconds;\n                    return fromdays + fromhours + fromminutes + fromseconds + frommiliseconds;\n                }\n            }\n            export class Time {\n                public static biggerThan(time1: sys.type.Time, time2: sys.type.Time): boolean {\n                    return Date.biggerThan(time1.date, time2.date) ? true :\n                        Date.biggerThan(time1.date, time2.date) ? false :\n                            Clock.biggerThan(time1.clock, time2.clock);\n                }\n                public static equals(time1: sys.type.Time, time2: sys.type.Time): boolean {\n                    return Date.equals(time1.date, time2.date) && Clock.equals(time1.clock, time2.clock);\n                }\n                public static now(): sys.type.Time {\n                    let newDate = new JavascriptDate();\n                    return new sys.type.Time(new sys.type.Date(newDate.getUTCFullYear(), newDate.getUTCMonth() + 1, newDate.getUTCDate()),\n                        new sys.type.Clock(newDate.getUTCHours(), newDate.getUTCMinutes(), newDate.getUTCSeconds()));\n                }\n                public static addMiliseconds(time: sys.type.Time, miliseconds: number): sys.type.Time {\n                    return Time.fromJavascriptDate(new JavascriptDate(\n                        Time.toJavascriptDate(time).getTime() + miliseconds));\n                }\n                public static addMinutes(time: sys.type.Time, minutes: number): sys.type.Time {\n                    let miliseconds = minutes * 60000;\n                    return Time.addMiliseconds(time, miliseconds);\n                }\n                public static DayToMiliseconds(minute: number): number {\n                    return minute * 86400000;\n                }\n                public static HourToMiliseconds(minute: number): number {\n                    return minute * 3600000;\n                }\n                public static MinuteToMiliseconds(minute: number): number {\n                    return minute * 60000;\n                }\n                public static SecondToMiliseconds(minute: number): number {\n                    return minute * 1000;\n                }\n                public static fromJavascriptDate(date: any): sys.type.Time {\n                    return new sys.type.Time(new sys.type.Date(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate()),\n                        new sys.type.Clock(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()));\n                }\n                public static toJavascriptDate(time: sys.type.Time): any {\n                    let date = new JavascriptDate();\n                    date.setUTCFullYear(time.date.year);\n                    date.setUTCMonth(time.date.month - 1);\n                    date.setUTCDate(time.date.day);\n                    date.setUTCHours(time.clock.hour);\n                    date.setUTCMinutes(time.clock.minute);\n                    date.setUTCSeconds(time.clock.second);\n                    return date;\n                }\n            }\n            export class Date {\n                public static equals(date1: sys.type.Date, date2: sys.type.Date): boolean {\n                    return date1.year == date2.year &&\n                        date1.month == date2.month &&\n                        date1.day == date2.day;\n                }\n                public static biggerThan(date1: sys.type.Date, date2: sys.type.Date): boolean {\n                    return date1.year > date2.year ? true : date1.year < date2.year ? false :\n                        date1.month > date2.month ? true : date1.month < date2.month ? false :\n                            date1.day > date2.day;\n                }\n            }\n            export class Clock {\n                public static equals(clock1: sys.type.Clock, clock2: sys.type.Clock): boolean {\n                    return clock1.hour == clock2.hour &&\n                        clock1.minute == clock2.minute &&\n                        clock1.second == clock2.second;\n                }\n                public static biggerThan(clock1: sys.type.Clock, clock2: sys.type.Clock): boolean {\n                    return clock1.hour > clock2.hour ? true : clock1.hour < clock2.hour ? false :\n                        clock1.minute > clock2.minute ? true : clock1.minute < clock2.minute ? false :\n                            clock1.second > clock2.second;\n                }\n            }\n            export class Array {\n                public static lastElement<T>(array: T[]) {\n                    return array[array.length - 1];\n                }\n                public static unifySameItems<T>(array: T[], compare = (t1: T, t2: T) => t1 === t2) {\n                    let ret: T[] = [];\n                    for (let item of array) {\n                        if (!sys.type.StaticTools.Array.contains(ret, item, compare)) {\n                            ret.push(item);\n                        }\n                    }\n                    return ret;\n                }\n                public static orderBy<T>(array: T[], compare?: (t1: T, t2: T) => boolean) {\n                    for (let i = 0; i < array.length - 1; i++) {\n                        for (let j = i + 1; j < array.length; j++) {\n                            if (compare(array[i], array[j])) {\n                                Array.swap(array, i, j);\n                            }\n                        }\n                    }\n                }\n                public static swap<T>(array: T[], index1: number, index2: number) {\n                    let temp = array[index1];\n                    array[index1] = array[index2];\n                    array[index2] = temp;\n                }\n                public static combine<T>(array1: T[], array2: T[]): T[] {\n                    let a = array1.concat(array2);\n                    for (var i = 0; i < a.length; ++i) {\n                        for (var j = i + 1; j < a.length; ++j) {\n                            if (a[i] === a[j])\n                                a.splice(j--, 1);\n                        }\n                    }\n                    return a;\n                }\n                public static equals<T, K>(array1: T[], array2: K[], compare?: (t: T, k: K) => boolean): boolean {\n                    if (!array1 && !array2) return true;\n                    if (!array1 || !array2) return false;\n                    if (array1.length !== array2.length) return false;\n                    if (compare) {\n                        for (let i = 0; i < array1.length; i++) {\n                            if (!compare(array1[i], array2[i])) return false;\n                        }\n                    } else {\n                        for (let i = 0; i < array1.length; i++) {\n                            if ((array1[i] as any) !== array2[i]) return false;\n                        }\n                    }\n                    return true;\n                }\n                public static contains<T, K>(array: T[], k: K, compare?: (arrayItem: T, k: K) => boolean): boolean {\n                    return Array.indexOf(array, k, compare) >= 0;\n                }\n                public static containsArray<T, K>(master: T[], slave: K[], compare?: (t: T, k: K) => boolean): boolean {\n                    for (let s of slave) {\n                        if (!Array.contains(master, s, compare)) return false;\n                    }\n                    return true;\n                }\n                public static indexOf<T, K>(array: T[], k: K, compare?: (arrayItem: T, k: K) => boolean): number {\n                    if (compare) {\n                        for (var i = 0; i < array.length; i++) {\n                            if (compare(array[i], k)) {\n                                return i;\n                            }\n                        }\n                    } else {\n                        for (var i = 0; i < array.length; i++) {\n                            if ((array[i] as any) === k) {\n                                return i;\n                            }\n                        }\n                    }\n                    return -1;\n                }\n                public static removeAt<T>(array: T[], index: number): T {\n                    return array.splice(index, 1)[0];\n                }\n                public static remove<T, K>(array: T[], k: K, compare?: (arrayItem: T, t: K) => boolean): T {\n                    if (compare) {\n                        for (let i = 0; i < array.length; i++) {\n                            if (compare(array[i], k)) {\n                                return array.splice(i, 1)[0];\n                            }\n                        }\n                    } else {\n                        for (let i = 0; i < array.length; i++) {\n                            if ((array[i] as any) == k) {\n                                return array.splice(i, 1)[0];\n                            }\n                        }\n                    }\n                }\n                public static getAllMatched<T, K>(array: T[], k: K, compare?: (arrayItem: T, t: K) => boolean): T[] {\n                    let returnValue: T[] = [];\n                    if (compare) {\n                        for (let i = 0; i < array.length; i++) {\n                            if (compare(array[i], k)) {\n                                returnValue.push(array[i]);\n                            }\n                        }\n                    } else {\n                        for (let i = 0; i < array.length; i++) {\n                            if ((array[i] as any) == k) {\n                                returnValue.push(array[i]);\n                            }\n                        }\n                    }\n                    return returnValue;\n                }\n                public static removeAllMatched<T, K>(array: T[], k: K, compare?: (arrayItem: T, t: K) => boolean): T[] {\n                    let returnValue: T[] = [];\n                    if (compare) {\n                        for (let i = 0; i < array.length; i++) {\n                            if (compare(array[i], k)) {\n                                returnValue.push(array.splice(i, 1)[0]);\n                                i--;\n                            }\n                        }\n                    } else {\n                        for (let i = 0; i < array.length; i++) {\n                            if ((array[i] as any) == k) {\n                                returnValue.push(array.splice(i, 1)[0]);\n                                i--;\n                            }\n                        }\n                    }\n                    return returnValue;\n                }\n            }\n        }\n    }\n}"]}